            JS UNIT TESTING
            _______________
            
"writing code that tests the main code"

"its no replacement for manual testing"

FOR JS or TS Projects



  __________APPLICATION__________
  |                             |
  |    UNIT             UNIT    |
  |                             |
  |    UNIT             UNIT    |
  
  
UNIT: e.g., a function, class, a component
  
  
-> we test all the single units
  
 
-----> BACKED UP WITH INTEGRATION TESTS <-----




UNIT Testing      +      INTEGRATION Testing      +      END-TO-END (E2N) Testing  










            A TESTING SETUP
            _______________

we need a   Test Runner        +       Assertion Library
          (for executing)             (Used to define expected outcomes)
          
          
Jest & Vitest


npm install -D vitest
npm install --save-dev vitest



"scripts": {
    "test": "vitest --globals"
    
    
    
    

            AAA Pattern - Arrange, Act, Assert
            __________________________________

allways write more then one test per unit (for different szenarios) - the amout always depends on own decision



create a file xxx.test.js

use "it" or "test" keyword

SYNTAX:
test('should yield a correct sum if an array of numeric string values is provided', () => {

});


    
npm test




            CHECKING FOR ERRORS
            ___________________
            
     we cant RETURN errors -> we have to throw
     
     

// testing for errors
test('should throw an error if no value is passed into the function', () => {
  const resultFunction = () => {
    add();
  }; // we cant RETURN errors -> we have to throw
  // expect(resultFunction).not.toThrow(); // not propertie is like !=
  expect(resultFunction).toThrow();
});
  
  
NOTE
we could have mutiple expect (-tations) in one test

BUT also seperate them -> so for each test we have one expect()




            "TEST SUITES"
            _____________


if we use a a lot of test and want to make clear all the differences, we use -> "TEST SUITES"

keyword is * describe *


import { test, expect, describe } from 'vitest';



            Testing Suit Identifier
                     |
describe('validateNumber()', () => {
 x
 x          all the test which belongs to this
 x
 x          all the test which belongs to this
 x
});
